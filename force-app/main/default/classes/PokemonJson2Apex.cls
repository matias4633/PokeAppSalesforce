//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class PokemonJson2Apex {

	public class Black_white {
		public Diamond_pearl animated {get;set;} 
		public String back_default {get;set;} 
		public Object back_female {get;set;} 
		public String back_shiny {get;set;} 
		public Object back_shiny_female {get;set;} 
		public String front_default {get;set;} 
		public Object front_female {get;set;} 
		public String front_shiny {get;set;} 
		public Object front_shiny_female {get;set;} 

		public Black_white(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'animated') {
							animated = new Diamond_pearl(parser);
						} else if (text == 'back_default') {
							back_default = parser.getText();
						} else if (text == 'back_female') {
							back_female = parser.readValueAs(Object.class);
						} else if (text == 'back_shiny') {
							back_shiny = parser.getText();
						} else if (text == 'back_shiny_female') {
							back_shiny_female = parser.readValueAs(Object.class);
						} else if (text == 'front_default') {
							front_default = parser.getText();
						} else if (text == 'front_female') {
							front_female = parser.readValueAs(Object.class);
						} else if (text == 'front_shiny') {
							front_shiny = parser.getText();
						} else if (text == 'front_shiny_female') {
							front_shiny_female = parser.readValueAs(Object.class);
						} else {
							System.debug(LoggingLevel.WARN, 'Black_white consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Generation_ii {
		public Crystal crystal {get;set;} 
		public Gold gold {get;set;} 
		public Gold silver {get;set;} 

		public Generation_ii(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'crystal') {
							crystal = new Crystal(parser);
						} else if (text == 'gold') {
							gold = new Gold(parser);
						} else if (text == 'silver') {
							silver = new Gold(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Generation_ii consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Types {
		public Integer slot {get;set;} 
		public Ability type {get;set;} 

		public Types(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'slot') {
							slot = parser.getIntegerValue();
						} else if (text == 'type') {
							type = new Ability(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Types consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Firered_leafgreen {
		public String back_default {get;set;} 
		public String back_shiny {get;set;} 
		public String front_default {get;set;} 
		public String front_shiny {get;set;} 

		public Firered_leafgreen(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'back_default') {
							back_default = parser.getText();
						} else if (text == 'back_shiny') {
							back_shiny = parser.getText();
						} else if (text == 'front_default') {
							front_default = parser.getText();
						} else if (text == 'front_shiny') {
							front_shiny = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Firered_leafgreen consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Generation_iii {
		public Emerald emerald {get;set;} 
		public Firered_leafgreen firered_leafgreen {get;set;} // in json: firered-leafgreen
		public Firered_leafgreen ruby_sapphire {get;set;} // in json: ruby-sapphire

		public Generation_iii(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'emerald') {
							emerald = new Emerald(parser);
						} else if (text == 'firered-leafgreen') {
							firered_leafgreen = new Firered_leafgreen(parser);
						} else if (text == 'ruby-sapphire') {
							ruby_sapphire = new Firered_leafgreen(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Generation_iii consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public List<Abilities> abilities {get;set;} 
	public Integer height {get;set;} 
	public Integer id {get;set;} 
	public List<Moves> moves {get;set;} 
	public String name {get;set;} 
	public Sprites sprites {get;set;} 
	public List<Stats> stats {get;set;} 
	public List<Types> types {get;set;} 
	public Integer weight {get;set;} 

	public PokemonJson2Apex(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'abilities') {
						abilities = arrayOfAbilities(parser);
					} else if (text == 'height') {
						height = parser.getIntegerValue();
					} else if (text == 'id') {
						id = parser.getIntegerValue();
					} else if (text == 'moves') {
						moves = arrayOfMoves(parser);
					} else if (text == 'name') {
						name = parser.getText();
					} else if (text == 'sprites') {
						sprites = new Sprites(parser);
					} else if (text == 'stats') {
						stats = arrayOfStats(parser);
					} else if (text == 'types') {
						types = arrayOfTypes(parser);
					} else if (text == 'weight') {
						weight = parser.getIntegerValue();
					} else {
						System.debug(LoggingLevel.WARN, 'PokemonJson2Apex consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Generation_vii {
		public Dream_world icons {get;set;} 
		public Home ultra_sun_ultra_moon {get;set;} // in json: ultra-sun-ultra-moon

		public Generation_vii(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'icons') {
							icons = new Dream_world(parser);
						} else if (text == 'ultra-sun-ultra-moon') {
							ultra_sun_ultra_moon = new Home(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Generation_vii consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Diamond_pearl {
		public String back_default {get;set;} 
		public Object back_female {get;set;} 
		public String back_shiny {get;set;} 
		public Object back_shiny_female {get;set;} 
		public String front_default {get;set;} 
		public Object front_female {get;set;} 
		public String front_shiny {get;set;} 
		public Object front_shiny_female {get;set;} 

		public Diamond_pearl(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'back_default') {
							back_default = parser.getText();
						} else if (text == 'back_female') {
							back_female = parser.readValueAs(Object.class);
						} else if (text == 'back_shiny') {
							back_shiny = parser.getText();
						} else if (text == 'back_shiny_female') {
							back_shiny_female = parser.readValueAs(Object.class);
						} else if (text == 'front_default') {
							front_default = parser.getText();
						} else if (text == 'front_female') {
							front_female = parser.readValueAs(Object.class);
						} else if (text == 'front_shiny') {
							front_shiny = parser.getText();
						} else if (text == 'front_shiny_female') {
							front_shiny_female = parser.readValueAs(Object.class);
						} else {
							System.debug(LoggingLevel.WARN, 'Diamond_pearl consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Generation_v {
		public Black_white black_white {get;set;} // in json: black-white

		public Generation_v(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'black-white') {
							black_white = new Black_white(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Generation_v consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Generation_iv {
		public Diamond_pearl diamond_pearl {get;set;} // in json: diamond-pearl
		public Diamond_pearl heartgold_soulsilver {get;set;} // in json: heartgold-soulsilver
		public Diamond_pearl platinum {get;set;} 

		public Generation_iv(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'diamond-pearl') {
							diamond_pearl = new Diamond_pearl(parser);
						} else if (text == 'heartgold-soulsilver') {
							heartgold_soulsilver = new Diamond_pearl(parser);
						} else if (text == 'platinum') {
							platinum = new Diamond_pearl(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Generation_iv consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Moves {
		public Ability move {get;set;} 
		public List<Version_group_details> version_group_details {get;set;} 

		public Moves(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'move') {
							move = new Ability(parser);
						} else if (text == 'version_group_details') {
							version_group_details = arrayOfVersion_group_details(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Moves consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Sprites {
		public String back_default {get;set;} 
		public Object back_female {get;set;} 
		public String back_shiny {get;set;} 
		public Object back_shiny_female {get;set;} 
		public String front_default {get;set;} 
		public Object front_female {get;set;} 
		public String front_shiny {get;set;} 
		public Object front_shiny_female {get;set;} 
		public Other other {get;set;} 
		public Versions versions {get;set;} 

		public Sprites(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'back_default') {
							back_default = parser.getText();
						} else if (text == 'back_female') {
							back_female = parser.readValueAs(Object.class);
						} else if (text == 'back_shiny') {
							back_shiny = parser.getText();
						} else if (text == 'back_shiny_female') {
							back_shiny_female = parser.readValueAs(Object.class);
						} else if (text == 'front_default') {
							front_default = parser.getText();
						} else if (text == 'front_female') {
							front_female = parser.readValueAs(Object.class);
						} else if (text == 'front_shiny') {
							front_shiny = parser.getText();
						} else if (text == 'front_shiny_female') {
							front_shiny_female = parser.readValueAs(Object.class);
						} else if (text == 'other') {
							other = new Other(parser);
						} else if (text == 'versions') {
							versions = new Versions(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Sprites consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Emerald {
		public String front_default {get;set;} 
		public String front_shiny {get;set;} 

		public Emerald(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'front_default') {
							front_default = parser.getText();
						} else if (text == 'front_shiny') {
							front_shiny = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Emerald consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Dream_world {
		public String front_default {get;set;} 
		public Object front_female {get;set;} 

		public Dream_world(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'front_default') {
							front_default = parser.getText();
						} else if (text == 'front_female') {
							front_female = parser.readValueAs(Object.class);
						} else {
							System.debug(LoggingLevel.WARN, 'Dream_world consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Generation_i {
		public Red_blue red_blue {get;set;} // in json: red-blue
		public Red_blue yellow {get;set;} 

		public Generation_i(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'red-blue') {
							red_blue = new Red_blue(parser);
						} else if (text == 'yellow') {
							yellow = new Red_blue(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Generation_i consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Generation_vi {
		public Home omegaruby_alphasapphire {get;set;} // in json: omegaruby-alphasapphire
		public Home x_y {get;set;} // in json: x-y

		public Generation_vi(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'omegaruby-alphasapphire') {
							omegaruby_alphasapphire = new Home(parser);
						} else if (text == 'x-y') {
							x_y = new Home(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Generation_vi consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Home {
		public String front_default {get;set;} 
		public Object front_female {get;set;} 
		public String front_shiny {get;set;} 
		public Object front_shiny_female {get;set;} 

		public Home(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'front_default') {
							front_default = parser.getText();
						} else if (text == 'front_female') {
							front_female = parser.readValueAs(Object.class);
						} else if (text == 'front_shiny') {
							front_shiny = parser.getText();
						} else if (text == 'front_shiny_female') {
							front_shiny_female = parser.readValueAs(Object.class);
						} else {
							System.debug(LoggingLevel.WARN, 'Home consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Ability {
		public String name {get;set;} 
		public String url {get;set;} 

		public Ability(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'name') {
							name = parser.getText();
						} else if (text == 'url') {
							url = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Ability consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Gold {
		public String back_default {get;set;} 
		public String back_shiny {get;set;} 
		public String front_default {get;set;} 
		public String front_shiny {get;set;} 
		public String front_transparent {get;set;} 

		public Gold(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'back_default') {
							back_default = parser.getText();
						} else if (text == 'back_shiny') {
							back_shiny = parser.getText();
						} else if (text == 'front_default') {
							front_default = parser.getText();
						} else if (text == 'front_shiny') {
							front_shiny = parser.getText();
						} else if (text == 'front_transparent') {
							front_transparent = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Gold consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Abilities {
		public Ability ability {get;set;} 
		public Boolean is_hidden {get;set;} 
		public Integer slot {get;set;} 

		public Abilities(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'ability') {
							ability = new Ability(parser);
						} else if (text == 'is_hidden') {
							is_hidden = parser.getBooleanValue();
						} else if (text == 'slot') {
							slot = parser.getIntegerValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Abilities consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Red_blue {
		public String back_default {get;set;} 
		public String back_gray {get;set;} 
		public String back_transparent {get;set;} 
		public String front_default {get;set;} 
		public String front_gray {get;set;} 
		public String front_transparent {get;set;} 

		public Red_blue(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'back_default') {
							back_default = parser.getText();
						} else if (text == 'back_gray') {
							back_gray = parser.getText();
						} else if (text == 'back_transparent') {
							back_transparent = parser.getText();
						} else if (text == 'front_default') {
							front_default = parser.getText();
						} else if (text == 'front_gray') {
							front_gray = parser.getText();
						} else if (text == 'front_transparent') {
							front_transparent = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Red_blue consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Official_artwork {
		public String front_default {get;set;} 

		public Official_artwork(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'front_default') {
							front_default = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Official_artwork consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Version_group_details {
		public Integer level_learned_at {get;set;} 
		public Ability move_learn_method {get;set;} 
		public Ability version_group {get;set;} 

		public Version_group_details(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'level_learned_at') {
							level_learned_at = parser.getIntegerValue();
						} else if (text == 'move_learn_method') {
							move_learn_method = new Ability(parser);
						} else if (text == 'version_group') {
							version_group = new Ability(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Version_group_details consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Versions {
		public Generation_i generation_i {get;set;} // in json: generation-i
		public Generation_ii generation_ii {get;set;} // in json: generation-ii
		public Generation_iii generation_iii {get;set;} // in json: generation-iii
		public Generation_iv generation_iv {get;set;} // in json: generation-iv
		public Generation_v generation_v {get;set;} // in json: generation-v
		public Generation_vi generation_vi {get;set;} // in json: generation-vi
		public Generation_vii generation_vii {get;set;} // in json: generation-vii
		public Generation_viii generation_viii {get;set;} // in json: generation-viii

		public Versions(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'generation-i') {
							generation_i = new Generation_i(parser);
						} else if (text == 'generation-ii') {
							generation_ii = new Generation_ii(parser);
						} else if (text == 'generation-iii') {
							generation_iii = new Generation_iii(parser);
						} else if (text == 'generation-iv') {
							generation_iv = new Generation_iv(parser);
						} else if (text == 'generation-v') {
							generation_v = new Generation_v(parser);
						} else if (text == 'generation-vi') {
							generation_vi = new Generation_vi(parser);
						} else if (text == 'generation-vii') {
							generation_vii = new Generation_vii(parser);
						} else if (text == 'generation-viii') {
							generation_viii = new Generation_viii(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Versions consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Stats {
		public Integer base_stat {get;set;} 
		public Integer effort {get;set;} 
		public Ability stat {get;set;} 

		public Stats(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'base_stat') {
							base_stat = parser.getIntegerValue();
						} else if (text == 'effort') {
							effort = parser.getIntegerValue();
						} else if (text == 'stat') {
							stat = new Ability(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Stats consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Generation_viii {
		public Dream_world icons {get;set;} 

		public Generation_viii(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'icons') {
							icons = new Dream_world(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Generation_viii consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Other {
		public Dream_world dream_world {get;set;} 
		public Home home {get;set;} 
		public Official_artwork official_artwork {get;set;} // in json: official-artwork

		public Other(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'dream_world') {
							dream_world = new Dream_world(parser);
						} else if (text == 'home') {
							home = new Home(parser);
						} else if (text == 'official-artwork') {
							official_artwork = new Official_artwork(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Other consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Crystal {
		public String back_default {get;set;} 
		public String back_shiny {get;set;} 
		public String back_shiny_transparent {get;set;} 
		public String back_transparent {get;set;} 
		public String front_default {get;set;} 
		public String front_shiny {get;set;} 
		public String front_shiny_transparent {get;set;} 
		public String front_transparent {get;set;} 

		public Crystal(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'back_default') {
							back_default = parser.getText();
						} else if (text == 'back_shiny') {
							back_shiny = parser.getText();
						} else if (text == 'back_shiny_transparent') {
							back_shiny_transparent = parser.getText();
						} else if (text == 'back_transparent') {
							back_transparent = parser.getText();
						} else if (text == 'front_default') {
							front_default = parser.getText();
						} else if (text == 'front_shiny') {
							front_shiny = parser.getText();
						} else if (text == 'front_shiny_transparent') {
							front_shiny_transparent = parser.getText();
						} else if (text == 'front_transparent') {
							front_transparent = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Crystal consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static PokemonJson2Apex parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new PokemonJson2Apex(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	





    private static List<Moves> arrayOfMoves(System.JSONParser p) {
        List<Moves> res = new List<Moves>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Moves(p));
        }
        return res;
    }







    private static List<Abilities> arrayOfAbilities(System.JSONParser p) {
        List<Abilities> res = new List<Abilities>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Abilities(p));
        }
        return res;
    }


    private static List<Version_group_details> arrayOfVersion_group_details(System.JSONParser p) {
        List<Version_group_details> res = new List<Version_group_details>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Version_group_details(p));
        }
        return res;
    }




    private static List<Stats> arrayOfStats(System.JSONParser p) {
        List<Stats> res = new List<Stats>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Stats(p));
        }
        return res;
    }









    private static List<Types> arrayOfTypes(System.JSONParser p) {
        List<Types> res = new List<Types>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Types(p));
        }
        return res;
    }















}